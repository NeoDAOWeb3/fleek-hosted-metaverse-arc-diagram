"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/metaverse-arc-diagram",{

/***/ "./pages/metaverse-arc-diagram.js":
/*!****************************************!*\
  !*** ./pages/metaverse-arc-diagram.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _antv_g6__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @antv/g6 */ \"./node_modules/@antv/g6/es/index.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n// A metaverse arc diagram using Ant Visualization\n// This is a mono repo in Github also for templates\n// It is includes in the pages of the NextJS Fleek Template project. \n// It is a NextJS component.\n\n\nvar _this = undefined;\nvar _s = $RefreshSig$();\n// Move this into a config file\nvar colors = [\n    'rgb(91, 143, 249)',\n    'rgb(90, 216, 166)',\n    'rgb(93, 112, 146)',\n    'rgb(246, 189, 22)',\n    'rgb(232, 104, 74)',\n    'rgb(109, 200, 236)',\n    'rgb(146, 112, 202)',\n    'rgb(255, 157, 77)',\n    'rgb(38, 154, 153)',\n    'rgb(227, 137, 163)', \n];\n// Initial config of the graph\nvar container = window.document.getElementById('container');\nvar width = container.scrollWidth;\nvar height = container.scrollHeight || 500;\n/* harmony default export */ __webpack_exports__[\"default\"] = (arcDiagram = _s(function(props) {\n    _s();\n    var arcDiagramData = props.arcDiagramData, arcDiagramStyles = props.arcDiagramStyles, arcDiagramFunctions = props.arcDiagramFunctions;\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), graph = ref[0], setGraph = ref[1];\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        if (graph) {\n            var scaleNodeProp = function scaleNodeProp(nodes, propName, refPropName, dataRange, outRange) {\n                var outLength = outRange[1] - outRange[0];\n                var dataLength = dataRange[1] - dataRange[0];\n                nodes.forEach(function(n) {\n                    n[propName] = (n[refPropName] - dataRange[0]) * outLength / dataLength + outRange[0];\n                });\n            };\n            var graph1 = new _antv_g6__WEBPACK_IMPORTED_MODULE_2__[\"default\"].Graph({\n                container: 'container',\n                width: width,\n                height: height,\n                linkCenter: true,\n                modes: {\n                    default: [\n                        {\n                            type: 'edge-tooltip',\n                            formatText: function formatText(model) {\n                                var text = 'source: ' + model.sourceName + '<br/> target: ' + model.targetName;\n                                return text;\n                            }\n                        }, \n                    ]\n                },\n                defaultNode: {\n                    style: {\n                        opacity: 0.8,\n                        lineWidth: 1,\n                        stroke: '#999'\n                    }\n                },\n                defaultEdge: {\n                    size: 1,\n                    color: '#e2e2e2',\n                    style: {\n                        opacity: 0.6,\n                        lineAppendWidth: 3\n                    }\n                }\n            });\n            graph1.on('edge:mouseenter', function(e) {\n                var edge = e.item;\n                graph1.setItemState(edge, 'hover', true);\n            });\n            graph1.on('edge:mouseleave', function(e) {\n                var edge = e.item;\n                graph1.setItemState(edge, 'hover', false);\n            });\n            if (true) window.onresize = function() {\n                if (!graph1 || graph1.get('destroyed')) return;\n                if (!container || !container.scrollWidth || !container.scrollHeight) return;\n                graph1.changeSize(container.scrollWidth, container.scrollHeight);\n            };\n            fetch('https://gw.alipayobjects.com/os/basement_prod/70cde3be-22e8-4291-98f1-4d5a5b75b62f.json').then(function(res) {\n                return res.json();\n            }).then(function(data) {\n                var origin = [\n                    width / 2,\n                    height / 2\n                ];\n                var radius = width < height ? width / 3 : height / 3;\n                var edges = data.edges;\n                var nodes = data.nodes;\n                var nodeMap = new Map();\n                var clusterMap = new Map();\n                var clusterId = 0;\n                var n1 = nodes.length;\n                var angleSep = Math.PI * 2 / n1;\n                nodes.forEach(function(node, i) {\n                    var angle = i * angleSep;\n                    node.x = radius * Math.cos(angle) + origin[0];\n                    node.y = radius * Math.sin(angle) + origin[1];\n                    node.angle = angle;\n                    nodeMap.set(node.id, node);\n                    // cluster\n                    if (node.cluster && clusterMap.get(node.cluster) === undefined) {\n                        clusterMap.set(node.cluster, clusterId);\n                        clusterId++;\n                    }\n                    var id = clusterMap.get(node.cluster);\n                    if (node.style) {\n                        node.style.fill = colors[id % colors.length];\n                    } else {\n                        node.style = {\n                            fill: colors[id % colors.length]\n                        };\n                    }\n                    // label\n                    node.label = node.name;\n                    node.labelCfg = {\n                        position: 'center',\n                        style: {\n                            rotate: angle,\n                            rotateCenter: 'lefttop',\n                            textAlign: 'start'\n                        }\n                    };\n                });\n                edges.forEach(function(edge) {\n                    edge.type = 'quadratic';\n                    var source = nodeMap.get(edge.source);\n                    var target = nodeMap.get(edge.target);\n                    edge.controlPoints = [\n                        {\n                            x: origin[0],\n                            y: origin[1]\n                        }, \n                    ];\n                    edge.color = source.style.fill;\n                    edge.sourceName = source.name;\n                    edge.targetName = target.name;\n                });\n                // map the value to node size\n                var maxValue = -9999, minValue = 9999;\n                nodes.forEach(function(n) {\n                    if (maxValue < n.value) maxValue = n.value;\n                    if (minValue > n.value) minValue = n.value;\n                });\n                var sizeRange = [\n                    3,\n                    30\n                ];\n                var sizeDataRange = [\n                    minValue,\n                    maxValue\n                ];\n                scaleNodeProp(nodes, 'size', 'value', sizeDataRange, sizeRange);\n                graph1.data(data);\n                graph1.render();\n            });\n        }\n    }, [\n        graph\n    ]);\n    return(/*#__PURE__*/ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n        id: \"container\",\n        style: {\n            width: '100%',\n            height: '100%'\n        },\n        __source: {\n            fileName: \"/Users/jonsenterfitt/NEODAO/metaverse-arc-diagram/pages/metaverse-arc-diagram.js\",\n            lineNumber: 170,\n            columnNumber: 9\n        },\n        __self: _this\n    }));\n}, \"guVkFVVSew6hH2g/XBdZM40Ur3I=\"));\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/metaverse-arc-diagram.js\n");

/***/ })

});